# -*- coding: utf-8 -*-
"""RBL_03_Project_Data_Generation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JwY1zjkgAED9t0taiENNhnXwR5zoZDLL

## Importing the Libraries
"""

import pandas as pd
import numpy as np

import random
from geopy.distance import geodesic, great_circle

"""## Part-01: Data Generation"""

# List of colleges with abbreviations
colleges = {
    "Veermata Jijabai Technological Institute (VJTI)": "VJTI",
    "Sardar Patel College of Engineering (SPCE)": "SPCE",
    "Fr. Conceicao Rodrigues College of Engineering (CRCE)": "CRCE",
    "Thadomal Shahani Engineering College (TSEC)": "TSEC",
    "KJ Somaiya College of Engineering (KJSCE)": "KJSCE",
    "Dwarkadas J. Sanghvi College of Engineering (DJSCE)": "DJSCE",
    "Rajiv Gandhi Institute of Technology (RGIT)": "RGIT",
    "Thakur College of Engineering & Technology (TCET)": "TCET",
    "Atharva College of Engineering (ACE)": "ACE",
    "Vidyalankar Institute of Technology (VIT)": "VIT",
    "Xavier Institute of Engineering (XIE)": "XIE",
    "Lokmanya Tilak College of Engineering (LTCE)": "LTCE",
    "Pillai College of Engineering (PCE)": "PCE",
    "Rizvi College of Engineering (RCE)": "RCE",
    "St. Francis Institute of Technology (SFIT)": "SFIT",
}

# Provided latitude and longitude values
coordinates = [
    (19.02226881476451, 72.85611047105924),
    (19.1235684573248, 72.83606045759184),
    (19.044495265640027, 72.82042414408073),
    (19.06467764778163, 72.83587092873782),
    (19.073141055797272, 72.89995838643945),
    (19.10755320389058, 72.8371888999345),
    (19.121444553373188, 72.82377867294565),
    (19.206452310319154, 72.8746485134044),
    (19.19790707947707, 72.82721448457612),
    (19.021766409349713, 72.87086578277962),
    (19.045384881667253, 72.84169772878016),
    (19.10593263258579, 73.00724809993187),
    (18.99034302869262, 73.12759499809235),
    (19.066895982785823, 72.8261514864408),
    (19.24375801111316, 72.85577952694638),
]

# Create a Pandas DataFrame
colleges_data = {"College Name": colleges.values(), "Latitude": [coord[0] for coord in coordinates], "Longitude": [coord[1] for coord in coordinates]}
college_location_data = pd.DataFrame(colleges_data)

# Display the DataFrame
print(college_location_data)

western_railway = {
    'Student Location': [
        'Churchgate',
        'Marine Lines',
        'Charni Road',
        'Grant Road',
        'Mumbai Central',
        'Mahalaxmi',
        'Lower Parel',
        'PrabhaDevi',
        'Dadar',
        'Matunga Road',
        'Mahim',
        'Bandra',
        'Khar Road',
        'Santacruz',
        'Vile Parle',
        'Andheri',
        'Jogeshwari',
        'Ram Mandir',
        'Goregaon',
        'Malad',
        'Kandivali',
        'Borivali',
        'Dahisar',
        'Mira Road',
        'Bhayandar',
        'Naigaon',
        'Vasai',
        'Nalla Sopara',
        'Virar'
    ],
    'Latitude': [
        18.93574685146416,
        18.945407681714553,
        18.95201373820337,
        18.96360355551109,
        18.969849451382963,
        18.981920144434586,
        18.99641014373852,
        19.008190032353408,
        19.019566918155085,
        19.029046828641416,
        19.040923578625627,
        19.06379401235694,
        19.06965129787316,
        19.081834893726818,
        19.099556034865568,
        19.119755296435958,
        19.136261490414526,
        19.151454889013,
        19.164586685570427,
        19.186851134876733,
        19.20411062400542,
        19.229107486483986,
        19.249399102813378,
        19.280879126616952,
        19.311303763550935,
        19.351414483374846,
        19.38059201242647,
        19.417686005524484,
        19.4547692257423
    ],
    'Longitude': [
        72.8271176020696,
        72.82441393541953,
        72.81828392363299,
        72.81619822704492,
        72.81927339243578,
        72.8236156082901,
        72.83082992036502,
        72.83583383758956,
        72.84388771052224,
        72.84692091828461,
        72.8465638815118,
        72.84112168184838,
        72.8402154764889,
        72.84172094668048,
        72.8439806138243,
        72.84648874568452,
        72.84889015120802,
        72.85076280684159,
        72.8493968698333,
        72.84890234731579,
        72.85180955412162,
        72.85739002984347,
        72.85963966602877,
        72.85601815291488,
        72.85259653638145,
        72.84643768518434,
        72.83322696555456,
        72.8189243794795,
        72.81200922026933
    ]
}

student_location_data = pd.DataFrame(western_railway)
print(student_location_data)

stations = ['Churchgate', 'Marine Lines', 'Charni Road', 'Grant Road', 'Mumbai Central',
        'Mahalaxmi', 'Lower Parel', 'PrabhaDevi', 'Dadar', 'Matunga Road',
        'Mahim', 'Bandra', 'Khar Road', 'Santacruz', 'Vile Parle', 'Andheri',
        'Jogeshwari', 'Ram Mandir', 'Goregaon', 'Malad', 'Kandivali', 'Borivali',
        'Dahisar', 'Mira Road', 'Bhayandar', 'Naigaon', 'Vasai', 'Nalla Sopara', 'Virar']

college_data = [
    ["SPIT","Computer Science and Engineering","Male",99.71],
    ["SPIT","Computer Science and Engineering","Female",99.64],
    ["SPIT","Computer Engineering","Male",99.79],
    ["SPIT","Computer Engineering","Female",99.70],
    ["SPIT","Electronics and Telecommunication Engg","Male",99.25],
    ["SPIT","Electronics and Telecommunication Engg","Female",99.10],
    ["VJTI","Civil Engineering","Male",97.84],
    ["VJTI","Civil Engineering","Female",97.78],
    ["VJTI","Computer Engineering","Male",99.88],
    ["VJTI","Computer Engineering","Female",99.24],
    ["VJTI","Information Technology","Male",99.75],
    ["VJTI","Information Technology","Female",99.55],
    ["VJTI","Electrical Engineering","Male",99.35],
    ["VJTI","Electrical Engineering","Female",99.11],
    ["VJTI","Electronics and Telecommunication Engineering","Male",99.69],
    ["VJTI","Electronics and Telecommunication Engineering","Female",98.07],
    ["VJTI","Mechanical Engineering","Male",99.11],
    ["VJTI","Mechanical Engineering","Female",98.21],
    ["F.R. Rodrigues","Mechanical Engineering","Male",94.69],
    ["F.R. Rodrigues","Mechanical Engineering","Female",94.90],
    ["F.R. Rodrigues","Electronics and Computer Science","Male",94.15],
    ["F.R. Rodrigues","Electronics and Computer Science","Female",94.57],
    ["F.R. Rodrigues","Artificial Intelligence and Data Science","Male",94.72],
    ["F.R. Rodrigues","Artificial Intelligence and Data Science","Female",95.03],
    ["F.R. Rodrigues","Computer Engineering","Male",97.98],
    ["F.R. Rodrigues","Computer Engineering","Female",97.34],
    ["TCET","Computer Engineering","Male",98.94],
    ["TCET","Computer Engineering","Female",98.59],
    ["TCET","Information Technology","Male",98.55],
    ["TCET","Information Technology","Female",98.16],
    ["TCET","Electronics and Telecommunication Engg","Male",97.12],
    ["TCET","Electronics and Telecommunication Engg","Female",96.82],
    ["TCET","Chemical Engineering","Male",95.81],
    ["TCET","Chemical Engineering","Female",93.96],
    ["TCET","Artificial Intelligence and Data Science","Male",97.92],
    ["TCET","Artificial Intelligence and Data Science","Female",97.54],
    ["TCET","Civil Engineering","Male",3.56],
    ["TCET","Civil Engineering","Female",46.05],
    ["KJ Somaiya","Computer Engineering","Male",97.60],
    ["KJ Somaiya","Computer Engineering","Female",97.20],
    ["KJ Somaiya","Information Technology","Male",92.24],
    ["KJ Somaiya","Information Technology","Female",92.14],
    ["KJ Somaiya","Electronics and Telecommunication Engg","Male",74.60],
    ["KJ Somaiya","Electronics and Telecommunication Engg","Female",68.15],
    ["KJ Somaiya","Artificial Intelligence and Data Science","Male",90.69],
    ["KJ Somaiya","Artificial Intelligence and Data Science","Female",90.21],
    ["DJ Sanghvi","Computer Engineering","Male",99.47],
    ["DJ Sanghvi","Computer Engineering","Female",99.24],
    ["DJ Sanghvi","Information Technology","Male",97.20],
    ["DJ Sanghvi","Information Technology","Female",97.01],
    ["DJ Sanghvi","Artificial Intelligence","Male",97.56],
    ["DJ Sanghvi","Artificial Intelligence","Female",97.45],
    ["DJ Sanghvi","Electronics and Telecommunication Engg","Male",93.18],
    ["DJ Sanghvi","Electronics and Telecommunication Engg","Female",94.22],
    ["DJ Sanghvi","Mechanical Engineering","Male",69.38],
    ["DJ Sanghvi","Mechanical Engineering","Female",85.35],
    ["DJ Sanghvi","Computer Science and Engineering(Data Science)","Male",98.92],
    ["DJ Sanghvi","Computer Science and Engineering(Data Science)","Female",98.56],
    ["DJ Sanghvi","Computer Science and Engineering (Internet of Things and Cyber Security Including Block Chain Technology)","Male",98.84],
    ["DJ Sanghvi","Computer Science and Engineering (Internet of Things and Cyber Security Including Block Chain Technology)","Female",98.44],
    ["DJ Sanghvi","Artificial Intelligence and Machine Learning","Male",97.18],
    ["DJ Sanghvi","Artificial Intelligence and Machine Learning","Female",97.45],


    ["TCET","Civil Engineering","Male",82.44],
    ["TCET","Civil Engineering","Female",75.90],
    ["TCET","Computer Engineering","Male",97.57],
    ["TCET","Computer Engineering","Female",96.55],
    ["TCET","Information Technology","Male",96.40],
    ["TCET","Information Technology","Female",95.49],
    ["TCET","Electronics and Telecommunication Engg","Male",92.86],
    ["TCET","Electronics and Telecommunication Engg","Female",90.49],
    ["TCET","Mechanical Engineering","Male",91.23],
    ["TCET","Mechanical Engineering","Female",67.95],
    ["TCET","Electronics and Computer Science","Male",94.08],
    ["TCET","Electronics and Computer Science","Female",92.84],
    ["TCET","Computer Science and Engineering(Cyber Security)","Male",95.27],
    ["TCET","Computer Science and Engineering(Cyber Security)","Female",95.88],
    ["TCET","Artificial Intelligence and Machine Learning","Male",96.34],
    ["TCET","Artificial Intelligence and Machine Learning","Female",94.39],
    ["TCET","Artificial Intelligence and Data Science","Male",96.07],
    ["TCET","Artificial Intelligence and Data Science","Female",95.06],
    ["ACE","Computer Engineering","Male",94.67],
    ["ACE","Computer Engineering","Female",94.64],
    ["ACE","Information Technology","Male",89.58],
    ["ACE","Information Technology","Female",84.78],
    ["ACE","Electrical Engineering","Male",75.95],
    ["ACE","Electrical Engineering","Female",73.20],
    ["ACE","Electronics and Telecommunication Engg","Male",79.31],
    ["ACE","Electronics and Telecommunication Engg","Female",72.51],
    ["ACE","Electronics and Computer Science","Male",81.35],
    ["ACE","Electronics and Computer Science","Female",78.77],
    ["SFIT","Electrical Engineering","Male",74.42],
    ["SFIT","Electrical Engineering","Female",69.71],
    ["SFIT","Electronics and Telecommunication Engineering","Male",88.14],
    ["SFIT","Electronics and Telecommunication Engineering","Female",88.78],
    ["SFIT","Mechanical Engineering","Male",75.59],
    ["SFIT","Mechanical Engineering","Female",37.19],
    ["SFIT","Computer Engineering","Male",96.04],
    ["SFIT","Computer Engineering","Female",96.67],
    ["SFIT","Information Technology","Male",95.40],
    ["SFIT","Information Technology","Female",94.37],
    ["RCE","Civil Engineering","Male",65.51],
    ["RCE","Civil Engineering","Female",69.34],
    ["RCE","Computer Engineering","Male",91.92],
    ["RCE","Computer Engineering","Female",91.14],
    ["RCE","Mechanical Engineering","Male",30.96],
    ["RCE","Mechanical Engineering","Female",33.34],
    ["RCE","Electronics and Computer Science","Male",83.79],
    ["RCE","Electronics and Computer Science","Female",80.74],
    ["RCE","Artificial Intelligence and Data Science","Male",90.27],
    ["RCE","Artificial Intelligence and Data Science","Female",89.44],
    ["PCE","Computer Engineering","Male",94.09],
    ["PCE","Computer Engineering","Female",93.40],
    ["PCE","Information Technology","Male",92.52],
    ["PCE","Information Technology","Female",92.29],
    ["PCE","Electronics and Telecommunication Engg","Male",79.14],
    ["PCE","Electronics and Telecommunication Engg","Female",77.52],
    ["PCE","Automobile Engineering","Male",64.61],
    ["PCE","Automobile Engineering","Female",51.06],
    ["PCE","Mechanical Engineering","Male",70.56],
    ["PCE","Mechanical Engineering","Female",55.30],
    ["PCE","Electronics and Computer Science","Male",87.09],
    ["PCE","Electronics and Computer Science","Female",86.34],
    ["LTCE","Computer Engineering","Male",90.37],
    ["LTCE","Computer Engineering","Female",90.63],
    ["LTCE","Electrical Engineering","Male",56.68],
    ["LTCE","Electrical Engineering","Female",25.55],
    ["LTCE","Electronics and Telecommunication Engg","Male",73.22],
    ["LTCE","Electronics and Telecommunication Engg","Female",74.10],
    ["LTCE","Mechanical Engineering","Male",35.83],
    ["LTCE","Computer Science and Engineering (AI and ML)","Male",86.53],
    ["LTCE","Computer Science and Engineering (AI and ML)","Female",87.86],
    ["LTCE","Computer Science and Engineering (Data Science)","Male",87.85],
    ["LTCE","Computer Science and Engineering (Data Science)","Female",87.76],
    ["LTCE","Computer Science and Engineering (IoT and Cyber Security)","Male",85.89],
    ["LTCE","Computer Science and Engineering (IoT and Cyber Security)","Female",85.27],
    ["XIE","Computer Engineering","Male",95.72],
    ["XIE","Computer Engineering","Female",94.83],
    ["XIE","Information Technology","Male",94.63],
    ["XIE","Information Technology","Female",94.22],
    ["XIE","Electronics and Telecommunication Engg","Male",86.79],
    ["XIE","Electronics and Telecommunication Engg","Female",85.96],
    ["XIE","Computer Science and Engineering (IoT and Cyber Security)","Male",93.55],
    ["XIE","Computer Science and Engineering (IoT and Cyber Security)","Female",91.17],
    ["VESIT","Computer Engineering","Male",98.24],
    ["VESIT","Computer Engineering","Female",98.58],
    ["VESIT","Information Technology","Male",97.52],
    ["VESIT","Information Technology","Female",97.14],
    ["VESIT","Electronics and Telecommunication Engg","Male",94.33],
    ["VESIT","Electronics and Telecommunication Engg","Female",92.93],
    ["VESIT","Electronics and Computer Science","Male",96.49],
    ["VESIT","Electronics and Computer Science","Female",95.66],
    ["VESIT","Automation and Robotics","Male",92.69],
    ["VESIT","Automation and Robotics","Female",91.32],
    ["VESIT","Artificial Intelligence and Data Science","Male",97.17],
    ["VESIT","Artificial Intelligence and Data Science","Female",96.82],



]

columns = ["College","Branch", "Gender","Cutoff"]
college_cutoff_data = pd.DataFrame(college_data, columns = columns)
print(college_cutoff_data)

np.random.seed(42)
num_entries = 5000

def generate_age():
    # Define the probabilities for each age range
    age_ranges = [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
    probabilities = [0.45, 0.47, 0.1, 0.035, 0.035, 0.015, 0.005, 0.005, 0.005, 0.005, 0.005]

    # Generate a random age based on the probabilities
    age = random.choices(age_ranges, probabilities)[0]

    return age

def generate_gender():
    genders = ["Male", "Female"]
    probabilities = [0.7, 0.3]  # 70% Male, 30% Female
    gender = random.choices(genders, probabilities)[0]
    return gender

age = [generate_age() for _ in range(num_entries)]
gender = [generate_gender() for _ in range(num_entries)]
socioeconomic_background = np.random.choice(['Open', 'SC', 'ST', 'OBC', 'EWS', 'State Quota'], num_entries)
student_location = np.random.choice(stations, num_entries)
ssc_marks = np.random.uniform(50, 100, num_entries)  # SSC marks in percentage

# HSC marks in percentage
hsc_marks = np.array([
    np.random.uniform(max(0, s - 30), min(100, s + 20)) for s in ssc_marks
])

# MHT CET scores in percentile -
# the mhtcet scores are in percentile so the values can be way below the ssc/hsc marks values
mhtcet_scores = np.array([
    np.random.uniform(max(0, s - 50), min(100, s + 30)) for s in ssc_marks
])

# there would be no major differences between the jee mains and mhtcet percentile scores
jee_mains_scores = np.array([
    np.random.uniform(max(0, m - 30), min(100, m + 20)) for m in mhtcet_scores
])

data = {
    'Age': age,
    'Gender': gender,
    'Socioeconomic_Background': socioeconomic_background,
    'Student_Location': student_location,
    'SSC_Marks_Percentage': ssc_marks,
    'HSC_Marks_Percentage': hsc_marks,
    'MHTCET_Scores_Percentile': mhtcet_scores,
    'JEE_Mains_Scores_Percentile': jee_mains_scores,
}

student_data = pd.DataFrame(data)
student_data.tail()

# Initialize an empty list to store top 10 choices
top_choices = []

# Iterate through each row in student_data
for index, student in student_data.iterrows():
    mhtcet_score = student['MHTCET_Scores_Percentile']
    gender = student['Gender']  # Get the student's gender
    choices = []  # To store {College, Branch, difference} for the top 10 choices

    # Filter college_cutoff_data based on student's gender
    filtered_cutoff_data = college_cutoff_data[college_cutoff_data['Gender'] == gender]

    for _, college in filtered_cutoff_data.iterrows():
        if mhtcet_score > college['Cutoff']:
            difference = mhtcet_score - college['Cutoff']
            if len(choices) < 10:
                choices.append((college['College'], college['Branch'], difference))
            else:
                choices.sort(key=lambda x: x[2], reverse=True)  # Sort by difference in descending order
                if difference < choices[0][2]:
                    choices[0] = (college['College'], college['Branch'], difference)

    top_choices.append(choices)

# Add the top choices to student_data
student_data['Top_Choices'] = top_choices

# Function to calculate distance between two latitude and longitude points
def calculate_distance(row):
    student_location = student_location_data['Student Location']
    student_coords = (student_location_data.loc[student_location_data['Student Location'] == student_location]['Latitude'].values[0], student_location_data.loc[student_location_data['Student Location'] == student_location]['Longitude'].values[0])
    min_distance = float('inf')
    chosen_college = None
    chosen_branch = None
    for college, branch, _ in row['Top_Choices']:
        college_location = college_location_data[
            (college_location_data['College Name'] == college)
        ]
        if not college_location.empty:
            college_location = (college_location['Latitude'].values[0], college_location['Longitude'].values[0])
            distance = great_circle(student_coords, college_location).kilometers
            if distance < min_distance:
                min_distance = distance
                chosen_college = college
                chosen_branch = branch
    if chosen_college is None:
        chosen_college = "Not eligible"
        chosen_branch = "Not eligible"
    return chosen_college, chosen_branch

# Apply the distance calculation function
student_data[['College', 'Branch']] = student_data.apply(calculate_distance, axis=1, result_type='expand')

print(student_data)

student_data.to_csv("student_data_with_placed_colleges.csv", index = False)